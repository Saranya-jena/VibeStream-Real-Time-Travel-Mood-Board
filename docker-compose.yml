version: '3.8'
services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"    # broker port (clients connect here)
      - "9093:9093"    # controller port (internal quorum)
      - "9094:9094"    # external broker (for host apps)
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

    volumes:
      - ./scripts:/opt/custom_scripts

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
      - KAFKA_CLUSTERS_0_NAME=kafka-uicluster
    depends_on:
      - kafka
  
  consumer:
    build: ./consumer             # Dockerfile inside consumer folder
    container_name: consumer
    ports:
      - "8082:8082"              # HTTP API port
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
    volumes:
      - ./consumer:/app           # mount local consumer code
      - ./db:/db  

      